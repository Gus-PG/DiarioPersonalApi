DESARROLLO API DIARIO:

->Entradas de un mismo usuario, las alamcena nuevamente o primero mira que no existan (en mayúsculas) ya.
->Opción de almacenarlas en Mayúsculas?
--> MODIFICAR CLAVE JWT LARGA EN APPSETTINGS.JSON
--> USUARIOS CONTROLES QUITAR USER2 COMO ADMIN (MODIFICAR ESA LÍNEA)
--> TOMAR NOTA CÓDIGO SWAGGER PARA AÑADIR BOTÓN SEGURIDAD (CANDADO) Y CONEXIÓN BEARER.
--> ELIMINAR '<AspNetCoreStdoutLogEnabled>true</AspNetCoreStdoutLogEnabled>' DEL .CSPROJ para 
que en Producción no ocupe espacio ni disminuya el rendimiento.

--> Se le puede poner comentarios a los métodos que definen los endpoints??

--> TEsteo TOKEN:
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIyIiwidW5pcXVlX25hbWUiOiJ1c2VyMiIsInJvbGUiOiJBZG1pbiIsIm5iZiI6MTc0MDk1MzA0NSwiZXhwIjoxNzQwOTU2NjQ1LCJpYXQiOjE3NDA5NTMwNDV9.y47O6kzXUo1SINk0_n7xMaPsp7vX57qUJTHvN4Sq61k


************************
SUGERENCIAS:
************************
--> PARA QUE NO ENGAÑEN CON CANTIDAD DE HASHTAGS, VER FORMA DE HACERLO.
--> AÑADIR enNDPOINT PARA EXPORTAR 1 SOLA ENTRADA?




************************
NOTAS DESARROLLO:
************************
BBDD LOCAL:
    "DefaultConnection": "Server=(localdb)\\mssqllocaldb;Database=DiarioPersonalDb;Trusted_Connection=True;MultipleActiveResultSets=true"

BBDD SMARTERASP.NET:
-------------------
SERVER:		SQL6033.site4now.net
PORT:		1433
DATABASE NAME:	db_aadd2e_diariopersonaldb
USER NAME:	db_aadd2e_diariopersonaldb_admin


Password FTP: Stndrd*01
Password BBDD: Stndrd*01
Clave Larga: ""


************************
NOTAS SMARTERASP:
************************
- EN VS22:
-> Despues de publicar por primera vez:

En Program.cs (ANTES De app.Run() ), poner:
using (var scope = app.Services.CreateScope())
{
    var db = scope.ServiceProvider.GetRequiredService<DiarioDbContext>();
    db.Database.Migrate();
}

-> Publicar y comprobar que se han creado las tablas de la bbdd.
-> ELIMINAR ESAS LÍNEAS de Program.cs




----------------------
DEVELOPMENT TIPS (GROK):
- Para excluir archivos de Git, añade al .gitignore (e.g., IDEAS DESARROLLO.txt).
- Para logs en SmarterASP, modificar stdoutLogEnabled="true" en web.config.
- Para documentar endpoints en Swagger, usar comentarios XML (///) y habilitar GenerateDocumentationFile en .csproj.
- Para usar HTTPS en SmarterASP, activar SSL con Let’s Encrypt desde el panel.
- Usar Refit para consumir APIs en MAUI: Install-Package Refit y registrar en MauiProgram.cs.
- Para depurar MAUI en Windows, crear una plataforma x64 basada en Any CPU en Administrador de configuraciones.
- Cuando se inyecta IApiService (o cualquier servicio) en el constructor de MainPage, registrar el tipo 
con builder.Services.AddTransient<MainPage>() en MauiProgram.cs para que el contenedor de inyección lo resuelva correctamente.
- En SmarterASP, reiniciar la aplicación desde el panel de control (pestaña superior ADVANCE) tras publicar cambios (e.g., OutOfProcess) para aplicar configuraciones.
- Verificar que el subdominio y la URL sean correctos si aparece un error 400 (Invalid URL).

GIT:
- Ignorar la carpeta .vs/ en .gitignore para evitar errores de permisos al usar git add.
- Cerrar Visual Studio antes de hacer git add para liberar archivos bloqueados.
- Crear repositorio en GitHub y vincular con git remote add origin <URL>.
- Si git push falla con 'src refspec main does not match any', verificar la rama con git branch y renombrar a main con git branch -m master main si es necesario.
- Asegurarse de tener commits locales (git log) antes de hacer push.
- Añadir obj/ y bin/ al .gitignore para evitar rastrear archivos generados y advertencias de LF/CRLF.
- Usar git rm -r --cached <carpeta> para dejar de rastrear carpetas ya añadidas después de actualizar .gitignore.




Comando

Propósito

git init

Inicializa un nuevo repositorio Git local en el directorio actual.

git add .

Añade todos los archivos modificados o nuevos al área de staging.

git commit -m "mensaje"

Guarda los cambios en el staging como un commit con un mensaje descriptivo.

git branch

Muestra las ramas existentes y marca la rama activa con un asterisco (*).

git log --oneline

Muestra el historial de commits en una línea por commit, con hash y mensaje.

git branch -m master main

Renombra la rama 
master
 a 
main
 (útil para estandarizar a 
main
).

git checkout -b main

Crea una nueva rama llamada 
main
 y se cambia a ella.

git remote add origin <URL>

Vincula el repositorio local a un repositorio remoto con la URL dada.

git remote -v 			--> Muestra los remotos configurados (fetch y push) con sus URLs.

git push -u origin main		--> Sube la rama main al remoto origin y establece main como rama predeterminada para futuros pushes.

git push -f origin main

Fuerza el push de la rama 
main
 al remoto, sobrescribiendo si es necesario (usar con precaución).

git rm -r --cached <carpeta>

Elimina una carpeta o archivo del índice de Git sin borrarlo del disco.

git config --global core.autocrlf false

Desactiva la conversión automática de saltos de línea (LF a CRLF) en Git.



Orden típico de uso:
git init (solo la primera vez).

git add . (para preparar los cambios).

git commit -m "..." (para guardar los cambios localmente).

git branch y git branch -m (si necesitas ajustar ramas).

git remote add origin <URL> (para vincular a GitHub).

git push -u origin main (para subir al remoto).

ELIMINAR /obj y /bin del indice de git si ya se hubiesen subido por error:
git rm -r --cached obj
git rm -r --cached bin






   <ScrollView>
       <VerticalStackLayout
           Padding="30,0"
           Spacing="25">
           <Image
               Source="dotnet_bot.png"
               HeightRequest="185"
               Aspect="AspectFit"
               SemanticProperties.Description="dot net bot in a race car number eight" />

           <Label
               Text="Hello, World!"
               Style="{StaticResource Headline}"
               SemanticProperties.HeadingLevel="Level1" />

           <Label
               Text="Welcome to &#10;.NET Multi-platform App UI"
               Style="{StaticResource SubHeadline}"
               SemanticProperties.HeadingLevel="Level2"
               SemanticProperties.Description="Welcome to dot net Multi platform App U I" />

           <Button
               x:Name="CounterBtn"
               Text="Click me" 
               SemanticProperties.Hint="Counts the number of times you click"
               Clicked="OnCounterClicked"
               HorizontalOptions="Fill" />
       </VerticalStackLayout>
   </ScrollView>